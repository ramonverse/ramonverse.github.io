{"version":3,"file":"lib_index_js.a991ff20ac43ddf3e3fa.js","mappings":"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","sources":["webpack://pretzelai/./src/index.ts","webpack://pretzelai/./src/prompt.ts","webpack://pretzelai/./src/utils.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { IIOPubMessage } from '@jupyterlab/services/lib/kernel/messages';\nimport * as monaco from 'monaco-editor';\nimport OpenAI from 'openai';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { OpenAIClient, AzureKeyCredential } from '@azure/openai';\nimport { calculateHash, isSetsEqual } from './utils';\nimport {\n  generatePrompt,\n  getTopSimilarities,\n  systemPrompt,\n  Embedding,\n  openaiEmbeddings,\n  AiService\n} from './prompt';\nimport posthog from 'posthog-js';\n\nposthog.init('phc_FnIUQkcrbS8sgtNFHp5kpMkSvL5ydtO1nd9mPllRQqZ', {\n  api_host: 'https://d2yfaqny8nshvd.cloudfront.net'\n});\n\nconst PLUGIN_ID = 'pretzelai:plugin';\n\nconst NUMBER_OF_SIMILAR_CELLS = 3;\n\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker, ISettingRegistry],\n  activate: async (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    notebookTracker: INotebookTracker,\n    settingRegistry: ISettingRegistry\n  ) => {\n    const { commands } = app;\n    const command = 'pretzelai:replace-code';\n    const placeholderDisabled =\n      'To use AI features, please set your OpenAI API key or Azure API details in the Pretzel AI Settings.\\n' +\n      'You can also use the free Pretzel AI server.\\n' +\n      'Go To: Settings > Settings Editor > Pretzel AI Settings to configure';\n\n    const placeHolderEnabled =\n      'Ask AI. Use @variableName to reference defined variables and dataframes';\n    let openAiApiKey = '';\n    let openAiBaseUrl = '';\n    let aiService: AiService = 'Use Pretzel AI Server';\n    let azureBaseUrl = '';\n    let azureDeploymentName = '';\n    let azureApiKey = '';\n    let openai: OpenAI;\n\n    // Function to load settings\n    function loadSettings(updateFunc?: () => void) {\n      settingRegistry\n        .load(extension.id)\n        .then(settings => {\n          openAiApiKey = (settings.get('openAiSettings').composite as any)\n            .openAiApiKey as string;\n          aiService = settings.get('aiService').composite as AiService;\n          openAiBaseUrl = (settings.get('openAiSettings').composite as any)\n            .openAiBaseUrl as string;\n          azureBaseUrl = (settings.get('azureSettings').composite as any)\n            .azureBaseUrl as string;\n          azureDeploymentName = (settings.get('azureSettings').composite as any)\n            .azureDeploymentName as string;\n          azureApiKey = (settings.get('azureSettings').composite as any)\n            .azureApiKey as string;\n          updateFunc?.();\n        })\n        .catch(reason => {\n          console.error('Failed to load settings for Pretzel', reason);\n        });\n    }\n    loadSettings();\n\n    function loadOpenai() {\n      if (openAiApiKey) {\n        openai = new OpenAI({\n          apiKey: openAiApiKey,\n          dangerouslyAllowBrowser: true\n        });\n      } else {\n        setTimeout(loadOpenai, 1000);\n      }\n    }\n    loadOpenai();\n\n    // Listen for future changes in settings\n    settingRegistry.pluginChanged.connect((sender, plugin) => {\n      if (plugin === extension.id) {\n        const updateFunc = async () => {\n          const submitButton = document.querySelector(\n            '.pretzelInputSubmitButton'\n          );\n          const inputField = document.querySelector('.pretzelInputField');\n\n          if (submitButton) {\n            if (\n              (aiService === 'OpenAI API key' && openAiApiKey) ||\n              aiService === 'Use Pretzel AI Server' ||\n              (aiService === 'Use Azure API' &&\n                azureBaseUrl &&\n                azureDeploymentName &&\n                azureApiKey)\n            ) {\n              (submitButton as HTMLInputElement).disabled = false;\n              (inputField as HTMLInputElement).placeholder = placeHolderEnabled;\n            } else {\n              (submitButton as HTMLInputElement).disabled = true;\n              (inputField as HTMLInputElement).placeholder =\n                placeholderDisabled;\n            }\n          }\n        };\n        loadSettings(updateFunc);\n      }\n    });\n\n    let embeddings: Embedding[];\n\n    async function createEmbeddings(\n      embeddingsJSON: Embedding[],\n      cells: any[],\n      path: string\n    ) {\n      embeddings = embeddingsJSON;\n      const newEmbeddingsArray: Embedding[] = [];\n      const promises = cells.map(cell => {\n        return (async () => {\n          const index = embeddings.findIndex(e => e.id === cell.id);\n          if (index !== -1) {\n            const hash = await calculateHash(cell.source);\n            if (hash !== embeddings[index].hash) {\n              try {\n                const response = await openaiEmbeddings(\n                  cell.source,\n                  aiService,\n                  openai\n                );\n                newEmbeddingsArray.push({\n                  id: cell.id,\n                  source: cell.source,\n                  hash,\n                  embedding: response.data[0].embedding\n                });\n              } catch (error) {\n                console.error('Error generating embedding:', error);\n              }\n            } else {\n              newEmbeddingsArray.push(embeddings[index]);\n            }\n          } else {\n            try {\n              const response = await openaiEmbeddings(\n                cell.source,\n                aiService,\n                openai\n              );\n              const hash = await calculateHash(cell.source);\n              newEmbeddingsArray.push({\n                id: cell.id,\n                source: cell.source,\n                hash,\n                embedding: response.data[0].embedding\n              });\n            } catch (error) {\n              console.error('Error generating embedding:', error);\n            }\n          }\n        })();\n      });\n      await Promise.allSettled(promises);\n      const oldSet = new Set(embeddings.map(e => e.hash));\n      const newSet = new Set(newEmbeddingsArray.map(e => e.hash));\n      if (!isSetsEqual(oldSet, newSet)) {\n        app.serviceManager.contents.save(path, {\n          type: 'file',\n          format: 'text',\n          content: JSON.stringify(newEmbeddingsArray)\n        });\n      }\n    }\n\n    // Function to print the source of all cells once the notebook is defined\n    function getEmbeddings() {\n      const notebook = notebookTracker.currentWidget;\n      if (notebook?.model) {\n        const currentNotebookPath = notebook.context.path;\n        const embeddingsPath =\n          currentNotebookPath.replace('.ipynb', '') + '_embeddings.json';\n\n        app.serviceManager.contents\n          .get(embeddingsPath)\n          .then(file => {\n            try {\n              const embJSON = JSON.parse(file.content);\n              createEmbeddings(\n                embJSON,\n                notebook!.model!.sharedModel.cells,\n                embeddingsPath\n              );\n            } catch (error) {\n              console.error('Error parsing embeddings JSON:', error);\n            }\n          })\n          .catch(async error => {\n            createEmbeddings(\n              [],\n              notebook!.model!.sharedModel.cells,\n              embeddingsPath\n            );\n          });\n        // Temporary solution to keep refreshing hashes in non blocking thread\n        setTimeout(getEmbeddings, 1000);\n      } else {\n        setTimeout(getEmbeddings, 1000);\n      }\n    }\n    getEmbeddings();\n\n    async function getVariableValue(\n      variableName: string\n    ): Promise<string | null> {\n      const notebook = notebookTracker.currentWidget;\n      if (notebook && notebook.sessionContext.session?.kernel) {\n        const kernel = notebook.sessionContext.session.kernel;\n        try {\n          // get the type - if dataframe, we get columns\n          // if other, we get the string representation\n          const executeRequest = kernel.requestExecute({\n            code: `print(${variableName})`\n          });\n          let variableValue: string | null = null;\n\n          // Registering a message hook to intercept messages\n          kernel.registerMessageHook(\n            executeRequest.msg.header.msg_id,\n            (msg: IIOPubMessage) => {\n              if (\n                msg.header.msg_type === 'stream' &&\n                // @ts-expect-error tserror\n                msg.content.name === 'stdout'\n              ) {\n                // @ts-expect-error tserror\n                variableValue = msg.content.text.trim();\n              }\n              return true;\n            }\n          );\n\n          // Await the completion of the execute request\n          const reply = await executeRequest.done;\n          if (reply && reply.content.status === 'ok') {\n            return variableValue;\n          } else {\n            console.error('Failed to retrieve variable value');\n            return null;\n          }\n        } catch (error) {\n          console.error('Error retrieving variable value:', error);\n          return null;\n        }\n      } else {\n        console.error('No active kernel found');\n        return null;\n      }\n    }\n\n    commands.addCommand(command, {\n      label: 'Replace Cell Code',\n      execute: () => {\n        const activeCell = notebookTracker.activeCell;\n\n        const selection = activeCell?.editor?.getSelection();\n        const cellCode = activeCell?.model.sharedModel.source;\n        if (selection) {\n          const editor = activeCell?.editor;\n          const startLine = selection.start.line;\n          const endLine = selection.end.line;\n          const startColumn = selection.start.column;\n          const endColumn = selection.end.column;\n          let extractedCode = '';\n\n          for (let i = startLine; i <= endLine; i++) {\n            const lineContent = cellCode!.split('\\n')[i];\n            if (lineContent !== undefined) {\n              if (i === startLine && i === endLine) {\n                extractedCode += lineContent.substring(startColumn, endColumn);\n              } else if (i === startLine) {\n                extractedCode += lineContent.substring(startColumn) + '\\n';\n              } else if (i === endLine) {\n                extractedCode += lineContent.substring(0, endColumn);\n              } else {\n                extractedCode += lineContent + '\\n';\n              }\n            }\n          }\n          console.log('Extracted code:', extractedCode);\n        }\n        console.log('Highlighted code:', selection);\n\n        let diffEditorContainer: HTMLElement;\n        let diffContainer: HTMLElement;\n\n        if (activeCell) {\n          // Cmd K twice should toggle the box\n          const existingDiv = activeCell.node.querySelector(\n            '.pretzelParentContainerAI'\n          );\n          if (existingDiv) {\n            // If so, delete that div\n            existingDiv.remove();\n            // Switch focus back to the Jupyter cell\n            activeCell!.editor!.focus();\n            return;\n          }\n\n          const oldCode = activeCell.model.sharedModel.source;\n\n          // Create a parent container for all dynamically created elements\n          const parentContainer = document.createElement('div');\n          parentContainer.classList.add('pretzelParentContainerAI');\n          activeCell.node.appendChild(parentContainer);\n          // Create an input field and append it below the cell\n          const inputContainer = document.createElement('div');\n          inputContainer.style.marginTop = '10px';\n          inputContainer.style.marginLeft = '70px';\n          inputContainer.style.display = 'flex';\n          inputContainer.style.flexDirection = 'column';\n          parentContainer.appendChild(inputContainer);\n\n          const inputField = document.createElement('textarea');\n          inputField.classList.add('pretzelInputField');\n          inputField.placeholder = placeHolderEnabled;\n          inputField.style.width = '100%';\n          inputField.style.height = '100px';\n          inputContainer.appendChild(inputField);\n          inputField.addEventListener('keydown', event => {\n            if (event.key === 'Escape') {\n              // TODO: this doesn't work - the Escape key isn't being captured\n              // but every other key press is being captured\n              event.preventDefault(); // Prevent any default behavior\n              // Shift focus back to the editor of the active cell\n              const activeCell = notebookTracker.activeCell;\n              if (activeCell && activeCell.editor) {\n                activeCell.editor.focus(); // Focus the editor of the active cell\n              }\n            }\n            // handle enter key press to trigger submit\n            if (event.key === 'Enter') {\n              event.preventDefault();\n              if (!submitButton.disabled) {\n                handleSubmit();\n              }\n            }\n          });\n\n          const callingP = document.createElement('p');\n          callingP.textContent = 'Calling AI Service...';\n          const generatingP = document.createElement('p');\n          generatingP.textContent = 'Generating code...';\n\n          const inputFieldButtonsContainer = document.createElement('div');\n          inputFieldButtonsContainer.style.marginTop = '10px';\n          inputFieldButtonsContainer.style.display = 'flex';\n          inputFieldButtonsContainer.style.flexDirection = 'row';\n          inputContainer.appendChild(inputFieldButtonsContainer);\n          inputField.focus();\n\n          const submitButton = document.createElement('button');\n          submitButton.classList.add('pretzelInputSubmitButton');\n          submitButton.textContent = 'Submit';\n          submitButton.style.backgroundColor = 'lightblue';\n          submitButton.style.borderRadius = '5px';\n          submitButton.style.border = '1px solid darkblue';\n          submitButton.style.maxWidth = '100px';\n          submitButton.style.minHeight = '25px';\n          submitButton.style.marginTop = '10px';\n          submitButton.style.marginRight = '10px';\n          inputFieldButtonsContainer.appendChild(submitButton);\n\n          // write code to add a button the removed the inputField and submitButton\n          const removeButton = document.createElement('button');\n          removeButton.textContent = 'Remove';\n          removeButton.style.backgroundColor = 'lightcoral';\n          removeButton.style.borderRadius = '5px';\n          removeButton.style.border = '1px solid darkred';\n          removeButton.style.maxWidth = '100px';\n          removeButton.style.minHeight = '25px';\n          removeButton.style.marginTop = '10px';\n          inputFieldButtonsContainer.appendChild(removeButton);\n          removeButton.addEventListener('click', () => {\n            activeCell.node.removeChild(parentContainer);\n          });\n\n          if (\n            (aiService === 'OpenAI API key' && !openAiApiKey) ||\n            (aiService === 'Use Azure API' &&\n              (!azureBaseUrl || !azureDeploymentName || !azureApiKey))\n          ) {\n            inputField.placeholder = placeholderDisabled;\n            submitButton.disabled = true;\n          }\n\n          const handleSubmit = async () => {\n            let userInput = inputField.value;\n            if (userInput !== '') {\n              parentContainer.removeChild(inputContainer);\n              let diffEditor: monaco.editor.IStandaloneDiffEditor | null = null;\n              const renderEditor = (gen: string) => {\n                try {\n                  if (!diffEditor) {\n                    createEditorComponents();\n                  }\n                  const modifiedModel = diffEditor!.getModel()!.modified;\n                  const endLineNumber = modifiedModel.getLineCount();\n\n                  const heightPx =\n                    (diffEditor!.getModel()!.original.getLineCount() +\n                      modifiedModel.getLineCount()) *\n                    19;\n                  diffEditorContainer.style.height = heightPx + 'px';\n\n                  diffEditor?.layout();\n                  const endColumn =\n                    modifiedModel.getLineMaxColumn(endLineNumber);\n                  modifiedModel.applyEdits([\n                    {\n                      range: new monaco.Range(\n                        endLineNumber,\n                        endColumn,\n                        endLineNumber,\n                        endColumn\n                      ),\n                      text: gen,\n                      forceMoveMarkers: true\n                    }\n                  ]);\n                } catch (error) {\n                  console.log('Error rendering editor:', error);\n                }\n              };\n\n              let diffButtonsContainer: HTMLElement;\n              let acceptButton: HTMLButtonElement;\n              let rejectButton: HTMLButtonElement;\n              let editPromptButton: HTMLButtonElement;\n\n              const createEditorComponents = () => {\n                // generate the editor components\n                // first, top level container to hold all diff related items\n                diffContainer = document.createElement('div');\n                diffContainer.style.marginTop = '10px';\n                diffContainer.style.display = 'flex';\n                diffContainer.style.flexDirection = 'column';\n                parentContainer.appendChild(diffContainer);\n\n                // next, container to hold the diff editor\n                diffEditorContainer = document.createElement('div');\n                diffContainer.appendChild(diffEditorContainer);\n\n                // finally, the diff editor itself\n                const currentTheme =\n                  document.body.getAttribute('data-jp-theme-light') === 'true'\n                    ? 'vs'\n                    : 'vs-dark';\n                diffEditor = monaco.editor.createDiffEditor(\n                  diffEditorContainer,\n                  {\n                    readOnly: true,\n                    theme: currentTheme,\n                    renderSideBySide: false\n                  }\n                );\n                diffEditor.setModel({\n                  original: monaco.editor.createModel(oldCode, 'python'),\n                  modified: monaco.editor.createModel('', 'python')\n                });\n\n                diffButtonsContainer = document.createElement('div');\n                diffButtonsContainer.style.marginTop = '10px';\n                diffButtonsContainer.style.marginLeft = '70px';\n                diffButtonsContainer.style.display = 'flex';\n                diffButtonsContainer.style.flexDirection = 'row';\n                diffContainer.appendChild(diffButtonsContainer);\n\n                // Create \"Accept\" and \"Reject\" buttons\n                acceptButton = document.createElement('button');\n                acceptButton.textContent = 'Accept';\n                acceptButton.style.backgroundColor = 'lightblue';\n                acceptButton.style.borderRadius = '5px';\n                acceptButton.style.border = '1px solid darkblue';\n                acceptButton.style.maxWidth = '100px';\n                acceptButton.style.minHeight = '25px';\n                acceptButton.style.marginRight = '10px';\n                acceptButton.addEventListener('click', () => {\n                  const modifiedCode = diffEditor!\n                    .getModel()!\n                    .modified.getValue();\n                  activeCell.model.sharedModel.source = modifiedCode;\n                  commands.execute('notebook:run-cell');\n                  activeCell.node.removeChild(parentContainer);\n                });\n\n                rejectButton = document.createElement('button');\n                rejectButton.textContent = 'Reject';\n                rejectButton.style.backgroundColor = 'lightblue';\n                rejectButton.style.borderRadius = '5px';\n                rejectButton.style.border = '1px solid darkblue';\n                rejectButton.style.maxWidth = '100px';\n                rejectButton.style.minHeight = '25px';\n                rejectButton.style.marginRight = '10px';\n                rejectButton.addEventListener('click', () => {\n                  activeCell.node.removeChild(parentContainer);\n                  activeCell.model.sharedModel.source = oldCode;\n                });\n\n                editPromptButton = document.createElement('button');\n                editPromptButton.textContent = 'Edit Prompt';\n                editPromptButton.style.backgroundColor = 'lightblue';\n                editPromptButton.style.borderRadius = '5px';\n                editPromptButton.style.border = '1px solid darkblue';\n                editPromptButton.style.maxWidth = '100px';\n                editPromptButton.style.minHeight = '25px';\n                editPromptButton.style.marginRight = '10px';\n                editPromptButton.addEventListener('click', () => {\n                  parentContainer.removeChild(diffContainer);\n                  parentContainer.appendChild(inputContainer);\n                  diffEditor = null;\n                });\n\n                // Handle Enter key press to trigger accept on accept/reject buttons\n                diffButtonsContainer.addEventListener('keydown', event => {\n                  if (event.key === 'Enter') {\n                    event.preventDefault();\n                    const activeElement = document.activeElement;\n                    if (activeElement === acceptButton) {\n                      acceptButton.click();\n                    } else if (activeElement === rejectButton) {\n                      rejectButton.click();\n                    }\n                  }\n                });\n\n                // Handle Escape key press to trigger reject on accept/reject buttons\n                diffButtonsContainer.addEventListener('keydown', event => {\n                  if (event.key === 'Escape') {\n                    event.preventDefault();\n                    rejectButton.click();\n                  }\n                });\n              };\n\n              const variablePattern = /@(\\w+)/g;\n              let match;\n              let modifiedUserInput = userInput;\n              while ((match = variablePattern.exec(userInput)) !== null) {\n                try {\n                  const variableName = match[1];\n                  // get value of var using the getVariableValue function\n                  const variableType = await getVariableValue(\n                    `type(${variableName})`\n                  );\n\n                  // check if variableType is dataframe\n                  // if it is, get columns and add to modifiedUserInput\n                  if (variableType?.includes('DataFrame')) {\n                    const variableColumns = await getVariableValue(\n                      `${variableName}.columns`\n                    );\n                    modifiedUserInput += `\\n${variableName} is a dataframe with the following columns: ${variableColumns}\\n`;\n                  } else if (variableType) {\n                    const variableValue = await getVariableValue(variableName);\n                    modifiedUserInput += `\\nPrinting ${variableName} in Python returns the string ${variableValue}\\n`;\n                  }\n                } catch (error) {\n                  console.error(`Error accessing variable ${match[1]}:`, error);\n                }\n              }\n              userInput = modifiedUserInput;\n\n              if (aiService === 'OpenAI API key' && openAiApiKey) {\n                try {\n                  const openai = new OpenAI({\n                    apiKey: openAiApiKey,\n                    dangerouslyAllowBrowser: true,\n                    baseURL: openAiBaseUrl ? openAiBaseUrl : undefined\n                  });\n                  const complete = async () => {\n                    const topSimilarities = await getTopSimilarities(\n                      userInput,\n                      embeddings,\n                      NUMBER_OF_SIMILAR_CELLS,\n                      openai,\n                      aiService\n                    );\n                    const prompt = generatePrompt(\n                      userInput,\n                      oldCode,\n                      topSimilarities\n                    );\n                    posthog.capture('prompt', { property: userInput });\n                    renderEditor('');\n                    diffButtonsContainer!.appendChild(callingP!);\n                    const stream = await openai.chat.completions.create({\n                      model: 'gpt-4-turbo-preview',\n                      messages: [\n                        {\n                          role: 'system',\n                          content: systemPrompt\n                        },\n                        {\n                          role: 'user',\n                          content: prompt\n                        }\n                      ],\n                      stream: true\n                    });\n                    diffButtonsContainer!.removeChild(callingP!);\n                    diffButtonsContainer!.appendChild(generatingP!);\n                    for await (const chunk of stream) {\n                      renderEditor(chunk.choices[0]?.delta?.content || '');\n                    }\n                    diffButtonsContainer!.removeChild(generatingP!);\n                    diffButtonsContainer!.appendChild(acceptButton!);\n                    diffButtonsContainer!.appendChild(rejectButton!);\n                    diffButtonsContainer!.appendChild(editPromptButton!);\n                  };\n                  complete();\n                } catch (error) {\n                  activeCell.node.removeChild(parentContainer);\n                }\n              } else if (aiService === 'Use Pretzel AI Server') {\n                const topSimilarities = await getTopSimilarities(\n                  userInput,\n                  embeddings,\n                  NUMBER_OF_SIMILAR_CELLS,\n                  openai,\n                  aiService\n                );\n                const options: any = {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    oldCode,\n                    userInput,\n                    topSimilarities\n                  })\n                };\n                posthog.capture('prompt', { property: userInput });\n                try {\n                  renderEditor('');\n                  diffButtonsContainer!.appendChild(callingP!);\n                  const response = await fetch(\n                    'https://wjwgjk52kb3trqnlqivqqyxm3i0glvof.lambda-url.eu-central-1.on.aws/',\n                    options\n                  );\n                  const reader = response!.body!.getReader();\n                  const decoder = new TextDecoder('utf-8');\n                  let isReading = true;\n                  diffButtonsContainer!.removeChild(callingP!);\n                  diffButtonsContainer!.appendChild(generatingP!);\n                  while (isReading) {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                      isReading = false;\n                    }\n                    const chunk = decoder.decode(value);\n                    renderEditor(chunk);\n                  }\n                  diffButtonsContainer!.removeChild(generatingP!);\n                  diffButtonsContainer!.appendChild(acceptButton!);\n                  diffButtonsContainer!.appendChild(rejectButton!);\n                  diffButtonsContainer!.appendChild(editPromptButton!);\n                } catch (error) {\n                  activeCell.model.sharedModel.source = `# Error: ${error}\\n${oldCode}`;\n                  activeCell.node.removeChild(parentContainer);\n                }\n              } else if (\n                aiService === 'Use Azure API' &&\n                azureBaseUrl &&\n                azureDeploymentName &&\n                azureApiKey\n              ) {\n                try {\n                  const client = new OpenAIClient(\n                    azureBaseUrl,\n                    new AzureKeyCredential(azureApiKey)\n                  );\n                  const deploymentId = azureDeploymentName;\n                  const prompt = [\n                    `Write python code to do \\n\"\"\"\\n${userInput}\\n\"\"\"\\nThe previous code is\\n\"\"\"\\n${oldCode}\\n\"\"\"\\nReturn ONLY executable python code, no backticks`\n                  ];\n\n                  const result = await client.getCompletions(\n                    deploymentId,\n                    prompt\n                  );\n\n                  for (const choice of result.choices) {\n                    renderEditor(choice.text);\n                  }\n                } catch (error) {\n                  activeCell.model.sharedModel.source = `# Error: ${error}\\n${oldCode}`;\n                  activeCell.node.removeChild(parentContainer);\n                }\n              }\n            }\n          };\n\n          // Handle submit button click to trigger accept\n          submitButton.addEventListener('click', handleSubmit);\n        }\n      }\n    });\n\n    const category = 'Cell Operations';\n    palette.addItem({ command, category });\n\n    app.commands.addKeyBinding({\n      command,\n      keys: ['Accel K'],\n      selector: '.jp-Notebook'\n    });\n  }\n};\n\nexport default extension;\n","import { cosineSimilarity } from './utils';\nimport { OpenAI } from 'openai';\n\nexport const EMBEDDING_MODEL = 'text-embedding-3-large';\n\nexport type AiService =\n  | 'OpenAI API key'\n  | 'Use Pretzel AI Server'\n  | 'Use Azure API';\n\nexport type Embedding = {\n  id: string;\n  source: string;\n  hash: string;\n  embedding: number[];\n};\n\nexport function generatePrompt(\n  userInput: string,\n  oldCode: string,\n  topSimilarities: string[]\n): string {\n  return `The user wants to do the following:\n\"\"\"\n${userInput}\n\"\"\"\n\n${\n  oldCode\n    ? `The following code already exists in the notebook cell:\n\"\"\"\n${oldCode}\n\"\"\"\n\n`\n    : ''\n}\n${\n  topSimilarities.length > 0\n    ? `We also have the following matching code chunks in the notebook\\n---\\n${topSimilarities.join('\\n---\\n')}\\n---\\n`\n    : ''\n}\nBased on the above, return ONLY executable python code, no backticks.`;\n}\n\nexport const openaiEmbeddings = async (\n  source: string,\n  aiService: AiService,\n  openai: OpenAI\n): Promise<OpenAI.Embeddings.CreateEmbeddingResponse> => {\n  return aiService === 'Use Pretzel AI Server'\n    ? ((await (\n        await fetch(\n          'https://e7l46ifvcg6qrbuinytg7u535y0denki.lambda-url.eu-central-1.on.aws/',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              source: source\n            })\n          }\n        )\n      ).json()) as OpenAI.Embeddings.CreateEmbeddingResponse)\n    : await openai.embeddings.create({\n        model: EMBEDDING_MODEL,\n        input: source\n      });\n};\n\nexport const getTopSimilarities = async (\n  userInput: string,\n  embeddings: Embedding[],\n  numberOfSimilarities: number,\n  openai: any,\n  aiService: AiService\n): Promise<string[]> => {\n  const response = await openaiEmbeddings(userInput, aiService, openai);\n  const userInputEmbedding = response.data[0].embedding;\n  const similarities = embeddings.map(embedding =>\n    cosineSimilarity(embedding.embedding, userInputEmbedding)\n  );\n  return similarities\n    .map((value, index) => ({ value, index }))\n    .sort((a, b) => b.value - a.value)\n    .slice(0, numberOfSimilarities)\n    .map(e => embeddings[e.index].source);\n};\n\nexport const systemPrompt =\n  'You are a helpful assistant that helps users write python code in Jupyter notebook cells. ' +\n  'You are helping the user write new code and edit old code in Jupyter notebooks. ' +\n  'You write code exactly as if an expert python user would write, reusing existing variables and functions as needed. ' +\n  'You respond with the clean, good quality, working python code only, no backticks.';\n","export async function calculateHash(input: string) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(input);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n\nexport const cosineSimilarity = (vecA: number[], vecB: number[]): number => {\n  const dotProduct = vecA.reduce(\n    (acc: number, current: number, index: number) =>\n      acc + current * vecB[index],\n    0\n  );\n  const magnitudeA = Math.sqrt(\n    vecA.reduce((acc: number, val: number) => acc + val * val, 0)\n  );\n  const magnitudeB = Math.sqrt(\n    vecB.reduce((acc: number, val: number) => acc + val * val, 0)\n  );\n  return dotProduct / (magnitudeA * magnitudeB);\n};\n\nexport const isSetsEqual = (xs: Set<any>, ys: Set<any>) =>\n  xs.size === ys.size && [...xs].every(x => ys.has(x));\n"],"names":[],"sourceRoot":""}