{"version":3,"file":"lib_index_js.6f7264ab94a5ae0993c2.js","mappings":"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","sources":["webpack://pnewext/./src/index.ts","webpack://pnewext/./src/prompt.ts","webpack://pnewext/./src/splashScreen.tsx","webpack://pnewext/./src/utils.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/*\n * Copyright (c) Pretzel AI GmbH.\n * This file is part of the Pretzel project and is licensed under the\n * GNU Affero General Public License version 3.\n * See the LICENSE_AGPLv3 file at the root of the project for the full license text.\n * Contributions by contributors listed in the PRETZEL_CONTRIBUTORS file (found at\n * the root of the project) are licensed under AGPLv3.\n */\n/**\n * @packageDocumentation\n * @module pretzelai-extension\n */\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { IIOPubMessage } from '@jupyterlab/services/lib/kernel/messages';\nimport * as monaco from 'monaco-editor';\nimport OpenAI from 'openai';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { AzureKeyCredential, OpenAIClient } from '@azure/openai';\nimport { calculateHash, isSetsEqual, renderEditor } from './utils';\nimport {\n  AiService,\n  Embedding,\n  generatePrompt,\n  getTopSimilarities,\n  openaiEmbeddings,\n  openAiStream\n} from './prompt';\nimport posthog from 'posthog-js';\nimport { CodeCellModel } from '@jupyterlab/cells';\nimport { OutputAreaModel } from '@jupyterlab/outputarea';\nimport { IOutputModel } from '@jupyterlab/rendermime';\nimport { initSplashScreen } from './splashScreen';\n\nfunction initializePosthog(cookiesEnabled: boolean) {\n  posthog.init('phc_FnIUQkcrbS8sgtNFHp5kpMkSvL5ydtO1nd9mPllRQqZ', {\n    api_host: 'https://d2yfaqny8nshvd.cloudfront.net',\n    persistence: cookiesEnabled ? 'localStorage+cookie' : 'memory',\n    autocapture: false,\n    capture_pageview: false,\n    capture_pageleave: false,\n    mask_all_text: true,\n    disable_session_recording: true\n  });\n}\n\nconst PLUGIN_ID = '@jupyterlab/pretzelai-extension:plugin';\n\nconst NUMBER_OF_SIMILAR_CELLS = 3;\n\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker, ISettingRegistry],\n  activate: async (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    notebookTracker: INotebookTracker,\n    settingRegistry: ISettingRegistry\n  ) => {\n    const { commands } = app;\n    const command = 'pretzelai:replace-code';\n    const placeholderDisabled =\n      'To use AI features, please set your OpenAI API key or Azure API details in the Pretzel AI Settings.\\n' +\n      'You can also use the free Pretzel AI server.\\n' +\n      'Go To: Settings > Settings Editor > Pretzel AI Settings to configure';\n\n    const placeHolderEnabled =\n      'Ask AI. Use @variableName to reference defined variables and dataframes';\n    let openAiApiKey = '';\n    let openAiBaseUrl = '';\n    let aiService: AiService = 'Use Pretzel AI Server';\n    let azureBaseUrl = '';\n    let azureDeploymentName = '';\n    let azureApiKey = '';\n    let aiClient: OpenAI | OpenAIClient | null;\n    let posthogPromptTelemetry: boolean = true;\n\n    const showSplashScreen = async (consent: string) => {\n      if (consent === 'None') {\n        initSplashScreen(settingRegistry);\n      }\n    };\n\n    async function loadSettings(updateFunc?: () => void) {\n      try {\n        const settings = await settingRegistry.load(PLUGIN_ID);\n        const openAiSettings = settings.get('openAiSettings').composite as any;\n        openAiApiKey = openAiSettings?.openAiApiKey || '';\n        openAiBaseUrl = openAiSettings?.openAiBaseUrl || '';\n\n        const azureSettings = settings.get('azureSettings').composite as any;\n        azureBaseUrl = azureSettings?.azureBaseUrl || '';\n        azureDeploymentName = azureSettings?.azureDeploymentName || '';\n        azureApiKey = azureSettings?.azureApiKey || '';\n\n        const aiServiceSetting = settings.get('aiService').composite;\n        aiService = (aiServiceSetting as AiService) || 'Use Pretzel AI Server';\n        posthogPromptTelemetry = settings.get('posthogPromptTelemetry')\n          .composite as boolean;\n\n        const cookieSettings = await settingRegistry.load(\n          '@jupyterlab/apputils-extension:notification'\n        );\n        const posthogCookieConsent = cookieSettings.get('posthogCookieConsent')\n          .composite as string;\n\n        initializePosthog(posthogCookieConsent === 'Yes');\n        updateFunc?.();\n        loadAIClient();\n        showSplashScreen(posthogCookieConsent);\n      } catch (reason) {\n        console.error('Failed to load settings for Pretzel', reason);\n      }\n    }\n    loadSettings();\n\n    function loadAIClient() {\n      if (aiService === 'OpenAI API key') {\n        aiClient = new OpenAI({\n          apiKey: openAiApiKey,\n          dangerouslyAllowBrowser: true\n        });\n      } else if (aiService === 'Use Azure API') {\n        aiClient = new OpenAIClient(\n          azureBaseUrl,\n          new AzureKeyCredential(azureApiKey)\n        );\n      } else {\n        aiClient = null;\n      }\n    }\n    loadAIClient(); // first time load, later settings will trigger this\n\n    // Listen for future changes in settings\n    settingRegistry.pluginChanged.connect((sender, plugin) => {\n      if (plugin === extension.id) {\n        const updateFunc = async () => {\n          const submitButton = document.querySelector(\n            '.pretzelInputSubmitButton'\n          );\n          const inputField = document.querySelector('.pretzelInputField');\n\n          if (submitButton) {\n            if (\n              (aiService === 'OpenAI API key' && openAiApiKey) ||\n              aiService === 'Use Pretzel AI Server' ||\n              (aiService === 'Use Azure API' &&\n                azureBaseUrl &&\n                azureDeploymentName &&\n                azureApiKey)\n            ) {\n              (submitButton as HTMLInputElement).disabled = false;\n              (inputField as HTMLInputElement).placeholder = placeHolderEnabled;\n            } else {\n              (submitButton as HTMLInputElement).disabled = true;\n              (inputField as HTMLInputElement).placeholder =\n                placeholderDisabled;\n            }\n          }\n        };\n        loadSettings(updateFunc);\n      }\n    });\n\n    notebookTracker.activeCellChanged.connect((sender, cell) => {\n      if (cell && cell.model.type === 'code') {\n        const codeCellModel = cell.model as CodeCellModel;\n        codeCellModel.outputs.changed.connect(() => {\n          const outputs = codeCellModel.outputs as OutputAreaModel;\n          const errorOutput = findErrorOutput(outputs);\n          if (errorOutput) {\n            addFixErrorButton(\n              cell.node.querySelector(\n                '.jp-RenderedText.jp-mod-trusted.jp-OutputArea-output'\n              ) as HTMLElement,\n              codeCellModel\n            );\n          }\n        });\n        addAskAIButton(cell.node);\n      }\n    });\n\n    function findErrorOutput(\n      outputs: OutputAreaModel\n    ): IOutputModel | undefined {\n      for (let i = 0; i < outputs.length; i++) {\n        const output = outputs.get(i);\n        if (output.type === 'error') {\n          return output;\n        }\n      }\n      return undefined;\n    }\n\n    function addFixErrorButton(\n      cellNode: HTMLElement,\n      cellModel: CodeCellModel\n    ) {\n      // Remove existing button if any for case with multiple errors multiple buttons\n      const existingButton = cellNode.querySelector('.fix-error-button');\n      if (existingButton) {\n        existingButton.remove();\n      }\n\n      const button = document.createElement('button');\n      button.textContent = 'Fix Error with AI';\n      button.className = 'fix-error-button';\n      button.style.position = 'absolute';\n      button.style.top = '10px';\n      button.style.right = '10px';\n      button.style.padding = '5px 10px';\n      button.style.backgroundColor = '#007bff';\n      button.style.color = 'white';\n      button.style.border = 'none';\n      button.style.borderRadius = '4px';\n      button.style.cursor = 'pointer';\n      cellNode.appendChild(button);\n      button.onclick = () => {\n        posthog.capture('Fix Error with AI', {\n          event_type: 'click',\n          method: 'fix_error'\n        });\n        const existingButton = cellNode.querySelector('.fix-error-button');\n        if (existingButton) {\n          existingButton.remove();\n        }\n        handleFixError(cellModel);\n      };\n    }\n\n    function addAskAIButton(cellNode: HTMLElement) {\n      // Hide button from non focused cells\n      const existingButton = document.querySelector('.pretzel-ai-button');\n      if (existingButton) {\n        existingButton.remove();\n      }\n\n      const button = document.createElement('button');\n      button.textContent = 'Ask AI';\n      button.style.fontSize = '12px';\n      button.className = 'pretzel-ai-button';\n      button.style.position = 'absolute';\n      button.style.top = '10px';\n      button.style.right = '190px';\n      button.style.padding = '2px 10px 3px 10px';\n      button.style.backgroundColor = 'rgb(84 157 235)';\n      button.style.color =\n        document.body.getAttribute('data-jp-theme-light') === 'true'\n          ? 'white'\n          : 'rgba(0, 0, 0, 0.8)';\n      button.style.border = 'none';\n      button.style.borderRadius = '4px';\n      button.style.cursor = 'pointer';\n      button.style.zIndex = '1000';\n      cellNode.appendChild(button);\n\n      button.onclick = () => {\n        posthog.capture('Ask AI', {\n          event_type: 'click',\n          method: 'ask_ai'\n        });\n        commands.execute('pretzelai:replace-code');\n      };\n    }\n\n    async function handleFixError(cellModel: CodeCellModel) {\n      const outputs = cellModel.outputs as OutputAreaModel;\n      let traceback = findErrorOutput(outputs)!.toJSON().traceback;\n      if (!traceback) {\n        // handle error where traceback is undefined\n        traceback = 'No traceback found';\n      }\n      // else  if traceback is an array, join with newlines\n      else if (traceback instanceof Array) {\n        // replace ANSI chars in traceback - they show colors that we don't need\n        // eslint-disable-next-line no-control-regex\n        traceback = traceback.join('\\n').replace(/\\x1B\\[[0-9;]*[a-zA-Z]/g, '');\n      }\n      // else traceback is some JS object. Convert it to a string representation\n      else {\n        traceback = traceback.toString();\n      }\n      const originalCode = cellModel.sharedModel.source;\n      let activeCell = notebookTracker.activeCell!;\n      const statusElement = document.createElement('p');\n      statusElement.style.marginLeft = '70px';\n      statusElement.textContent = 'Calculating embeddings...';\n      activeCell.node.appendChild(statusElement);\n\n      const topSimilarities = await getTopSimilarities(\n        originalCode,\n        embeddings,\n        NUMBER_OF_SIMILAR_CELLS,\n        aiClient,\n        aiService,\n        cellModel.id\n      );\n      const prompt = generatePrompt(\n        '',\n        originalCode,\n        topSimilarities,\n        '',\n        traceback\n      );\n      let diffEditorContainer: HTMLElement = document.createElement('div');\n      let diffEditor: monaco.editor.IStandaloneDiffEditor | null = null;\n\n      const parentContainer = document.createElement('div');\n      parentContainer.classList.add('pretzelParentContainerAI');\n      activeCell.node.appendChild(parentContainer);\n\n      diffEditor = renderEditor(\n        '',\n        parentContainer,\n        diffEditorContainer,\n        diffEditor,\n        monaco,\n        originalCode\n      );\n\n      openAiStream({\n        aiService,\n        openAiApiKey,\n        openAiBaseUrl,\n        prompt,\n        parentContainer,\n        inputContainer: null,\n        diffEditorContainer,\n        diffEditor,\n        monaco,\n        oldCode: originalCode,\n        azureBaseUrl,\n        azureApiKey,\n        deploymentId: azureDeploymentName,\n        activeCell,\n        commands,\n        statusElement\n      })\n        .then(() => {\n          // clear output of the cell\n          cellModel.outputs.clear();\n        })\n        .catch(error => {\n          console.error('Error during OpenAI stream:', error);\n        });\n    }\n\n    let embeddings: Embedding[];\n\n    async function createEmbeddings(\n      embeddingsJSON: Embedding[],\n      cells: any[],\n      path: string\n    ) {\n      embeddings = embeddingsJSON;\n      const newEmbeddingsArray: Embedding[] = [];\n      const promises = cells\n        .filter(cell => cell.source.trim() !== '') // Filter out empty cells\n        .map(cell => {\n          return (async () => {\n            const index = embeddings.findIndex(e => e.id === cell.id);\n            if (index !== -1) {\n              const hash = await calculateHash(cell.source);\n              if (hash !== embeddings[index].hash) {\n                try {\n                  const response = await openaiEmbeddings(\n                    cell.source,\n                    aiService,\n                    aiClient\n                  );\n                  newEmbeddingsArray.push({\n                    id: cell.id,\n                    source: cell.source,\n                    hash,\n                    embedding: response.data[0].embedding\n                  });\n                } catch (error) {\n                  console.error('Error generating embedding:', error);\n                }\n              } else {\n                newEmbeddingsArray.push(embeddings[index]);\n              }\n            } else {\n              try {\n                const response = await openaiEmbeddings(\n                  cell.source,\n                  aiService,\n                  aiClient\n                );\n                const hash = await calculateHash(cell.source);\n                newEmbeddingsArray.push({\n                  id: cell.id,\n                  source: cell.source,\n                  hash,\n                  embedding: response.data[0].embedding\n                });\n              } catch (error) {\n                console.error('Error generating embedding:', error);\n              }\n            }\n          })();\n        });\n      await Promise.allSettled(promises);\n      const oldSet = new Set((embeddings).map(e => e.hash));\n      const newSet = new Set((newEmbeddingsArray).map(e => e.hash));\n      if (!isSetsEqual(oldSet, newSet)) {\n        app.serviceManager.contents.save(path, {\n          type: 'file',\n          format: 'text',\n          content: JSON.stringify(newEmbeddingsArray)\n        });\n      }\n    }\n\n    // Function to print the source of all cells once the notebook is defined\n    function getEmbeddings() {\n      const notebook = notebookTracker.currentWidget;\n      if (notebook?.model) {\n        const currentNotebookPath = notebook.context.path;\n        const embeddingsPath =\n          currentNotebookPath.replace('.ipynb', '') + '_embeddings.json';\n\n        app.serviceManager.contents\n          .get(embeddingsPath)\n          .then(file => {\n            try {\n              const embJSON = JSON.parse(file.content);\n              createEmbeddings(\n                embJSON,\n                notebook!.model!.sharedModel.cells,\n                embeddingsPath\n              );\n            } catch (error) {\n              console.error('Error parsing embeddings JSON:', error);\n            }\n          })\n          .catch(async error => {\n            app.serviceManager.contents.save(embeddingsPath, {\n              type: 'file',\n              format: 'text',\n              content: JSON.stringify([])\n            });\n          });\n        // Temporary solution to keep refreshing hashes in non blocking thread\n        setTimeout(getEmbeddings, 1000);\n      } else {\n        setTimeout(getEmbeddings, 1000);\n      }\n    }\n    getEmbeddings();\n\n    async function getVariableValue(\n      variableName: string\n    ): Promise<string | null> {\n      const notebook = notebookTracker.currentWidget;\n      if (notebook && notebook.sessionContext.session?.kernel) {\n        const kernel = notebook.sessionContext.session.kernel;\n        try {\n          // get the type - if dataframe, we get columns\n          // if other, we get the string representation\n          const executeRequest = kernel.requestExecute({\n            code: `print(${variableName})`\n          });\n          let variableValue: string | null = null;\n\n          // Registering a message hook to intercept messages\n          kernel.registerMessageHook(\n            executeRequest.msg.header.msg_id,\n            (msg: IIOPubMessage) => {\n              if (\n                msg.header.msg_type === 'stream' &&\n                // @ts-expect-error tserror\n                msg.content.name === 'stdout'\n              ) {\n                // @ts-expect-error tserror\n                variableValue = msg.content.text.trim();\n              }\n              return true;\n            }\n          );\n\n          // Await the completion of the execute request\n          const reply = await executeRequest.done;\n          if (reply && reply.content.status === 'ok') {\n            return variableValue;\n          } else {\n            console.error('Failed to retrieve variable value');\n            return null;\n          }\n        } catch (error) {\n          console.error('Error retrieving variable value:', error);\n          return null;\n        }\n      } else {\n        console.error('No active kernel found');\n        return null;\n      }\n    }\n\n    const getSelectedCode = () => {\n      const selection = notebookTracker.activeCell?.editor?.getSelection();\n      const cellCode = notebookTracker.activeCell?.model.sharedModel.source;\n      let extractedCode = '';\n      if (\n        selection &&\n        (selection.start.line !== selection.end.line ||\n          selection.start.column !== selection.end.column)\n      ) {\n        const startLine = selection.start.line;\n        const endLine = selection.end.line;\n        const startColumn = selection.start.column;\n        const endColumn = selection.end.column;\n        for (let i = startLine; i <= endLine; i++) {\n          const lineContent = cellCode!.split('\\n')[i];\n          if (lineContent !== undefined) {\n            if (i === startLine && i === endLine) {\n              extractedCode += lineContent.substring(startColumn, endColumn);\n            } else if (i === startLine) {\n              extractedCode += lineContent.substring(startColumn);\n            } else if (i === endLine) {\n              extractedCode += '\\n' + lineContent.substring(0, endColumn);\n            } else {\n              extractedCode += '\\n' + lineContent;\n            }\n          }\n        }\n      }\n      // also return the selection\n      return { extractedCode: extractedCode.trimEnd(), selection };\n    };\n\n    async function processTaggedVariables(userInput: string): Promise<string> {\n      const variablePattern = /@(\\w+)/g;\n      let match;\n      let modifiedUserInput = userInput;\n      while ((match = variablePattern.exec(userInput)) !== null) {\n        try {\n          const variableName = match[1];\n          // get value of var using the getVariableValue function\n          const variableType = await getVariableValue(`type(${variableName})`);\n\n          // check if variableType is dataframe\n          // if it is, get columns and add to modifiedUserInput\n          if (variableType?.includes('DataFrame')) {\n            const variableColumns = await getVariableValue(\n              `${variableName}.columns`\n            );\n            modifiedUserInput += `\\n${variableName} is a dataframe with the following columns: ${variableColumns}\\n`;\n          } else if (variableType) {\n            const variableValue = await getVariableValue(variableName);\n            modifiedUserInput += `\\nPrinting ${variableName} in Python returns the string ${variableValue}\\n`;\n          }\n        } catch (error) {\n          console.error(`Error accessing variable ${match[1]}:`, error);\n        }\n      }\n      return modifiedUserInput;\n    }\n\n    commands.addCommand(command, {\n      label: 'Replace Cell Code',\n      execute: () => {\n        const activeCell = notebookTracker.activeCell;\n\n        let diffEditorContainer: HTMLElement = document.createElement('div');\n        let diffEditor: monaco.editor.IStandaloneDiffEditor | null = null;\n\n        if (activeCell) {\n          // Cmd K twice should toggle the box\n          const existingDiv = activeCell.node.querySelector(\n            '.pretzelParentContainerAI'\n          );\n          // this code is repeated with the removeHandler\n          if (existingDiv) {\n            // If so, delete that div\n            existingDiv.remove();\n            // Switch focus back to the Jupyter cell\n            posthog.capture('Remove via Cmd K', {\n              event_type: 'keypress',\n              event_value: 'Cmd+k',\n              method: 'remove'\n            });\n            const statusElements = activeCell.node.querySelectorAll(\n              'p[style=\"margin-left: 70px;\"]'\n            );\n            statusElements.forEach(element => element.remove());\n\n            // Switch focus back to the Jupyter cell\n            activeCell!.editor!.focus();\n            return;\n          }\n\n          const oldCode = activeCell.model.sharedModel.source;\n\n          const statusElement = document.createElement('p');\n          statusElement.textContent = '';\n          statusElement.style.marginLeft = '70px';\n          activeCell.node.appendChild(statusElement);\n\n          // Create a parent container for all dynamically created elements\n          const parentContainer = document.createElement('div');\n          parentContainer.classList.add('pretzelParentContainerAI');\n          activeCell.node.appendChild(parentContainer);\n          // Create an input field and append it below the cell\n          const inputContainer = document.createElement('div');\n          inputContainer.style.marginTop = '10px';\n          inputContainer.style.marginLeft = '70px';\n          inputContainer.style.display = 'flex';\n          inputContainer.style.flexDirection = 'column';\n          parentContainer.appendChild(inputContainer);\n\n          const inputField = document.createElement('textarea');\n          inputField.classList.add('pretzelInputField');\n          inputField.placeholder = placeHolderEnabled;\n          inputField.style.width = '100%';\n          inputField.style.height = '100px';\n          inputContainer.appendChild(inputField);\n          inputField.addEventListener('keydown', event => {\n            if (event.key === 'Escape') {\n              // TODO: this doesn't work - the Escape key isn't being captured\n              // but every other key press is being captured\n              posthog.capture('Remove via Escape', {\n                event_type: 'keypress',\n                event_value: 'esc',\n                method: 'remove'\n              });\n              event.preventDefault(); // Prevent any default behavior\n              // Shift focus back to the editor of the active cell\n              const activeCell = notebookTracker.activeCell;\n              if (activeCell && activeCell.editor) {\n                activeCell.editor.focus(); // Focus the editor of the active cell\n              }\n            }\n            // handle enter key press to trigger submit\n            if (event.key === 'Enter') {\n              event.preventDefault();\n              if (!submitButton.disabled) {\n                posthog.capture('Submit via Enter', {\n                  event_type: 'keypress',\n                  event_value: 'enter',\n                  method: 'submit'\n                });\n                handleSubmit(inputField.value);\n              }\n            }\n          });\n\n          const inputFieldButtonsContainer = document.createElement('div');\n          inputFieldButtonsContainer.style.marginTop = '10px';\n          inputFieldButtonsContainer.style.display = 'flex';\n          inputFieldButtonsContainer.style.flexDirection = 'row';\n          inputContainer.appendChild(inputFieldButtonsContainer);\n          inputField.focus();\n\n          const submitButton = document.createElement('button');\n          submitButton.classList.add('pretzelInputSubmitButton');\n          submitButton.textContent = 'Submit';\n          submitButton.style.backgroundColor = 'lightblue';\n          submitButton.style.borderRadius = '5px';\n          submitButton.style.border = '1px solid darkblue';\n          submitButton.style.maxWidth = '100px';\n          submitButton.style.minHeight = '25px';\n          submitButton.style.marginTop = '10px';\n          submitButton.style.marginRight = '10px';\n          submitButton.addEventListener('click', () => {\n            posthog.capture('Submit via Click', {\n              event_type: 'click',\n              method: 'submit'\n            });\n            handleSubmit(inputField.value);\n          });\n          inputFieldButtonsContainer.appendChild(submitButton);\n\n          // write code to add a button the removed the inputField and submitButton\n          const removeButton = document.createElement('button');\n          removeButton.textContent = 'Remove';\n          removeButton.style.backgroundColor = 'lightcoral';\n          removeButton.style.borderRadius = '5px';\n          removeButton.style.border = '1px solid darkred';\n          removeButton.style.maxWidth = '100px';\n          removeButton.style.minHeight = '25px';\n          removeButton.style.marginTop = '10px';\n          inputFieldButtonsContainer.appendChild(removeButton);\n          const removeHandler = () => {\n            posthog.capture('Remove via Click', {\n              event_type: 'click',\n              method: 'remove'\n            });\n            activeCell.node.removeChild(parentContainer);\n            const statusElements = activeCell.node.querySelectorAll(\n              'p[style=\"margin-left: 70px;\"]'\n            );\n            statusElements.forEach(element => element.remove());\n\n            // Switch focus back to the Jupyter cell\n            activeCell!.editor!.focus();\n          };\n\n          removeButton.addEventListener('click', removeHandler);\n\n          const handleSubmit = async (userInput: string) => {\n            parentContainer.removeChild(inputContainer);\n            const { extractedCode } = getSelectedCode();\n            statusElement.textContent = 'Calculating embeddings...';\n            if (userInput !== '') {\n              userInput = await processTaggedVariables(userInput);\n              try {\n                const topSimilarities = await getTopSimilarities(\n                  userInput,\n                  embeddings,\n                  NUMBER_OF_SIMILAR_CELLS,\n                  aiClient,\n                  aiService,\n                  activeCell.model.id\n                );\n                const prompt = generatePrompt(\n                  userInput,\n                  oldCode,\n                  topSimilarities,\n                  extractedCode\n                );\n\n                // if posthogPromptTelemetry is true, capture the prompt\n                if (posthogPromptTelemetry) {\n                  posthog.capture('prompt', { property: userInput });\n                } else {\n                  posthog.capture('prompt', { property: 'no_telemetry' });\n                }\n                diffEditor = renderEditor(\n                  '',\n                  parentContainer,\n                  diffEditorContainer,\n                  diffEditor,\n                  monaco,\n                  oldCode\n                );\n                openAiStream({\n                  aiService,\n                  parentContainer,\n                  diffEditorContainer,\n                  diffEditor,\n                  monaco,\n                  oldCode,\n                  inputContainer,\n                  // OpenAI API\n                  openAiApiKey,\n                  openAiBaseUrl,\n                  prompt,\n                  // Azure API\n                  azureApiKey,\n                  azureBaseUrl,\n                  deploymentId: azureDeploymentName,\n                  activeCell,\n                  commands,\n                  statusElement\n                });\n              } catch (error) {\n                activeCell.node.removeChild(parentContainer);\n              }\n            }\n          };\n        }\n      }\n    });\n\n    const category = 'Cell Operations';\n    palette.addItem({ command, category });\n\n    app.commands.addKeyBinding({\n      command,\n      keys: ['Accel K'],\n      selector: '.jp-Notebook'\n    });\n  }\n};\n\nexport default extension;\n","/* eslint-disable camelcase */\n/*\n * Copyright (c) Pretzel AI GmbH.\n * This file is part of the Pretzel project and is licensed under the\n * GNU Affero General Public License version 3.\n * See the LICENSE_AGPLv3 file at the root of the project for the full license text.\n * Contributions by contributors listed in the PRETZEL_CONTRIBUTORS file (found at\n * the root of the project) are licensed under AGPLv3.\n */\nimport { cosineSimilarity } from './utils';\nimport { OpenAI } from 'openai';\nimport { Embeddings } from '@azure/openai/types/openai';\nimport { renderEditor } from './utils';\nimport { AzureKeyCredential, OpenAIClient } from '@azure/openai';\nimport posthog from 'posthog-js';\n\nexport const EMBEDDING_MODEL = 'text-embedding-3-large';\n\nexport type AiService =\n  | 'OpenAI API key'\n  | 'Use Pretzel AI Server'\n  | 'Use Azure API';\n\nexport type Embedding = {\n  id: string;\n  source: string;\n  hash: string;\n  embedding: number[];\n};\n\nexport function generatePrompt(\n  userInput: string,\n  oldCode: string,\n  topSimilarities: string[],\n  selectedCode: string = '',\n  traceback: string = ''\n): string {\n  if (selectedCode) {\n    return generatePromptEditPartial(\n      userInput,\n      selectedCode,\n      oldCode,\n      topSimilarities\n    );\n  }\n  if (traceback) {\n    return generatePromptErrorFix(traceback, oldCode, topSimilarities);\n  }\n  return generatePromptNewAndFullEdit(userInput, oldCode, topSimilarities);\n}\n\nfunction generatePromptNewAndFullEdit(\n  userInput: string,\n  oldCode: string,\n  topSimilarities: string[]\n): string {\n  return `The user wants to do the following:\n\"\"\"\n${userInput}\n\"\"\"\n\n${\n  oldCode\n    ? `The following code already exists in the notebook cell:\n\"\"\"\n${oldCode}\n\"\"\"\n\n`\n    : ''\n}\n${\n  topSimilarities.length > 0\n    ? `We also have the following matching code chunks in the notebook\\n---\\n${topSimilarities.join(\n        '\\n---\\n'\n      )}\\n---\\n`\n    : ''\n}\nBased on the above, return ONLY executable python code, no backticks.`;\n}\n\nfunction generatePromptEditPartial(\n  userInput: string,\n  selectedCode: string,\n  oldCode: string,\n  topSimilarities: string[]\n): string {\n  return `The user has selected the following code chunk in the CURRENT Jupyter notebook cell (pay attention to the indents and newlines):\nSELECTED CODE START\n\\`\\`\\`\n${selectedCode}\n\\`\\`\\`\nSELECTED CODE END\n\nThis code is part of the following larger code chunk\nFULL CODE CHUNK START\n\\`\\`\\`\n${oldCode}\n\\`\\`\\`\nFULL CODE CHUNK END\n\nThe user wants to modify the SELECTED CODE ONLY (IMPORTANT) with the following instruction:\n\"\"\"\n${userInput}\n\"\"\"\n\n${\n  topSimilarities.length > 0\n    ? `The following code chunks were also found in the notebook and may be relevant:\\n\\`\\`\\`\\n${topSimilarities.join(\n        '\\n```\\n\\n```\\n'\n      )}\\n\\`\\`\\`\\n`\n    : ''\n}\n\nINSTRUCTION: Modify the SELECTED CODE (AND ONLY THE SELECTED CODE) according to the user's instructions. Return FULL CODE CHUNK but with the selected code modified.`;\n}\n\nfunction generatePromptErrorFix(\n  traceback: string,\n  oldCode: string,\n  topSimilarities: string[]\n): string {\n  return `The user ran the following code in the current Jupyter notebook cell:\n\n---\n${oldCode}\n---\n\nRunning the code produces the following traceback:\n${traceback}\n---\n\n${\n  topSimilarities.length > 0\n    ? `We also have the following related code chunks in the notebook\\n---\\n${topSimilarities.join(\n        '\\n---\\n'\n      )}\\n---\\n`\n    : ''\n}\n\nBased on the above, your instructions are:\n\n- If the error is in the CURRENT cell, fix the error and return ONLY correct, executable python code, no backticks, no comments.\n- Else if the error is NOT in the CURRENT Jupyter Notebook cell, add a comment at the top explaining this and add just enough code in the CURRENT cell to fix the error.\n- Else If you don't have enough context to fix the error, just reply with existing code and a comment at the top explaining why you cannot generate fixed code.\n`;\n}\n\nexport const openAiStream = async ({\n  aiService,\n  openAiApiKey,\n  openAiBaseUrl,\n  prompt,\n  parentContainer,\n  inputContainer,\n  diffEditorContainer,\n  diffEditor,\n  monaco,\n  oldCode,\n  azureBaseUrl,\n  azureApiKey,\n  deploymentId,\n  activeCell,\n  commands,\n  statusElement\n}: {\n  aiService: string;\n  openAiApiKey?: string;\n  openAiBaseUrl?: string;\n  prompt?: string;\n  parentContainer: HTMLElement;\n  inputContainer: Node | null;\n  diffEditorContainer: HTMLElement;\n  diffEditor: any;\n  monaco: any;\n  oldCode: string;\n  azureBaseUrl?: string;\n  azureApiKey?: string;\n  deploymentId?: string;\n  activeCell: any;\n  commands: any;\n  statusElement: HTMLElement;\n}): Promise<void> => {\n  statusElement.textContent = 'Calling AI service...';\n  if (aiService === 'OpenAI API key' && openAiApiKey && prompt) {\n    const openai = new OpenAI({\n      apiKey: openAiApiKey,\n      dangerouslyAllowBrowser: true,\n      baseURL: openAiBaseUrl ? openAiBaseUrl : undefined\n    });\n    const stream = await openai.chat.completions.create({\n      model: 'gpt-4o',\n      messages: [\n        {\n          role: 'system',\n          content: systemPrompt\n        },\n        {\n          role: 'user',\n          content: prompt\n        }\n      ],\n      stream: true\n    });\n    statusElement.textContent = 'Generating code...';\n    for await (const chunk of stream) {\n      renderEditor(\n        chunk.choices[0]?.delta?.content || '',\n        parentContainer,\n        diffEditorContainer,\n        diffEditor,\n        monaco,\n        oldCode\n      );\n    }\n  } else if (aiService === 'Use Pretzel AI Server') {\n    const response = await fetch(\n      'https://wjwgjk52kb3trqnlqivqqyxm3i0glvof.lambda-url.eu-central-1.on.aws/',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [\n            {\n              role: 'system',\n              content: systemPrompt\n            },\n            {\n              role: 'user',\n              content: prompt\n            }\n          ]\n        })\n      }\n    );\n    const reader = response!.body!.getReader();\n    const decoder = new TextDecoder('utf-8');\n    let isReading = true;\n    statusElement.textContent = 'Generating code...';\n    while (isReading) {\n      const { done, value } = await reader.read();\n      if (done) {\n        isReading = false;\n      }\n      const chunk = decoder.decode(value);\n      renderEditor(\n        chunk,\n        parentContainer,\n        diffEditorContainer,\n        diffEditor,\n        monaco,\n        oldCode\n      );\n    }\n  } else if (\n    aiService === 'Use Azure API' &&\n    prompt &&\n    azureBaseUrl &&\n    azureApiKey &&\n    deploymentId\n  ) {\n    const client = new OpenAIClient(\n      azureBaseUrl,\n      new AzureKeyCredential(azureApiKey)\n    );\n    const result = await client.getCompletions(deploymentId, [prompt]);\n    statusElement.textContent = 'Generating code...';\n    for (const choice of result.choices) {\n      renderEditor(\n        choice.text,\n        parentContainer,\n        diffEditorContainer,\n        diffEditor,\n        monaco,\n        oldCode\n      );\n    }\n  }\n  // Handle occasional responsde with backticks\n  const newCode = diffEditor.getModel().modified.getValue();\n  if (newCode.split('```').length === 3) {\n    renderEditor(\n      newCode.split('```')[1],\n      parentContainer,\n      diffEditorContainer,\n      diffEditor,\n      monaco,\n      oldCode\n    );\n  }\n  setTimeout(async () => {\n    const changes = diffEditor.getLineChanges();\n    let totalLines = oldCode.split('\\n').length;\n    if (changes) {\n      changes.forEach((c: any) => {\n        if (c.modifiedEndLineNumber >= c.modifiedStartLineNumber) {\n          const modified =\n            c.modifiedEndLineNumber - c.modifiedStartLineNumber + 1;\n\n          totalLines += modified;\n        }\n      });\n    }\n    const heightPx = totalLines * 19;\n    diffEditorContainer.style.height = heightPx + 'px';\n    diffEditor?.layout();\n  }, 500);\n  // Create \"Accept\" and \"Reject\" buttons\n  const diffContainer = document.querySelector('.diff-container');\n  const acceptButton = document.createElement('button');\n  acceptButton.textContent = 'Accept';\n  acceptButton.style.backgroundColor = 'lightblue';\n  acceptButton.style.borderRadius = '5px';\n  acceptButton.style.border = '1px solid darkblue';\n  acceptButton.style.maxWidth = '100px';\n  acceptButton.style.minHeight = '25px';\n  acceptButton.style.marginRight = '10px';\n  const handleAccept = () => {\n    const modifiedCode = diffEditor!.getModel()!.modified.getValue();\n    activeCell.model.sharedModel.source = modifiedCode;\n    commands.execute('notebook:run-cell');\n    activeCell.node.removeChild(parentContainer);\n    statusElement.remove();\n  };\n  acceptButton.addEventListener('click', () => {\n    posthog.capture('Accept', {\n      event_type: 'click',\n      method: 'accept'\n    });\n    handleAccept();\n  });\n\n  const rejectButton = document.createElement('button');\n  rejectButton.textContent = 'Reject';\n  rejectButton.style.backgroundColor = 'lightblue';\n  rejectButton.style.borderRadius = '5px';\n  rejectButton.style.border = '1px solid darkblue';\n  rejectButton.style.maxWidth = '100px';\n  rejectButton.style.minHeight = '25px';\n  rejectButton.style.marginRight = '10px';\n  const handleReject = () => {\n    activeCell.node.removeChild(parentContainer);\n    activeCell.model.sharedModel.source = oldCode;\n    statusElement.remove();\n  };\n  rejectButton.addEventListener('click', () => {\n    posthog.capture('Reject', {\n      event_type: 'click',\n      method: 'reject'\n    });\n    handleReject();\n  });\n\n  const editPromptButton = document.createElement('button');\n  if (inputContainer) {\n    editPromptButton.textContent = 'Edit Prompt';\n    editPromptButton.style.backgroundColor = 'lightgreen';\n    editPromptButton.style.borderRadius = '5px';\n    editPromptButton.style.border = '1px solid darkgreen';\n    editPromptButton.style.maxWidth = '100px';\n    editPromptButton.style.minHeight = '25px';\n    editPromptButton.style.marginRight = '10px';\n\n    editPromptButton.addEventListener('click', () => {\n      posthog.capture('Edit Prompt', {\n        event_type: 'click',\n        method: 'edit_prompt'\n      });\n      // Remove the parent container\n      parentContainer.remove();\n      commands.execute('pretzelai:replace-code');\n\n      const newParentContainer = document.querySelector(\n        '.pretzelParentContainerAI'\n      );\n      const newInputField = (newParentContainer as HTMLElement).querySelector(\n        '.pretzelInputField'\n      ) as HTMLTextAreaElement;\n      if (newInputField) {\n        const oldInputField = (inputContainer as HTMLElement).querySelector(\n          '.pretzelInputField'\n        ) as HTMLTextAreaElement;\n        if (oldInputField) {\n          const oldInputText = oldInputField.value;\n          newInputField.value = oldInputText;\n        }\n        newInputField.focus();\n      }\n    });\n  }\n\n  const diffButtonsContainer = document.createElement('div');\n  diffButtonsContainer.style.marginTop = '10px';\n  diffButtonsContainer.style.marginLeft = '70px';\n  diffButtonsContainer.style.display = 'flex';\n  diffButtonsContainer.style.flexDirection = 'row';\n  diffButtonsContainer.tabIndex = 0; // Make the container focusable\n  diffButtonsContainer.style.outline = 'none'; // Remove blue border when focused\n  diffContainer!.appendChild(diffButtonsContainer);\n  diffButtonsContainer!.appendChild(acceptButton!);\n  diffButtonsContainer!.appendChild(rejectButton!);\n  if (inputContainer) {\n    diffButtonsContainer!.appendChild(editPromptButton!);\n  }\n  diffButtonsContainer.addEventListener('keydown', event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleAccept();\n    } else if (event.key === 'Escape') {\n      event.preventDefault();\n      handleReject();\n    }\n  });\n  diffButtonsContainer.focus();\n  statusElement.textContent = '';\n};\n\nexport const openaiEmbeddings = async (\n  source: string,\n  aiService: AiService,\n  aiClient: OpenAI | OpenAIClient | null\n): Promise<OpenAI.Embeddings.CreateEmbeddingResponse | Embeddings> => {\n  if (aiService === 'Use Pretzel AI Server') {\n    return (await (\n      await fetch(\n        'https://e7l46ifvcg6qrbuinytg7u535y0denki.lambda-url.eu-central-1.on.aws/',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            source: source\n          })\n        }\n      )\n    ).json()) as OpenAI.Embeddings.CreateEmbeddingResponse;\n  } else if (aiService === 'OpenAI API key') {\n    return await (aiClient as OpenAI).embeddings.create({\n      model: EMBEDDING_MODEL,\n      input: source\n    });\n  } else if (aiService === 'Use Azure API') {\n    return await (aiClient as OpenAIClient).getEmbeddings(\n      'text-embedding-ada-002',\n      [source]\n    );\n  } else {\n    throw new Error('Invalid AI service');\n  }\n};\n\nexport const getTopSimilarities = async (\n  userInput: string,\n  embeddings: Embedding[],\n  numberOfSimilarities: number,\n  aiClient: OpenAI | OpenAIClient | null,\n  aiService: AiService,\n  cellId: string\n): Promise<string[]> => {\n  const response = await openaiEmbeddings(userInput, aiService, aiClient);\n  const userInputEmbedding = response.data[0].embedding; // same API for openai and azure\n  const similarities = embeddings\n    .filter(embedding => embedding.id !== cellId) // Exclude current cell's embedding\n    .map((embedding, index) => ({\n      value: cosineSimilarity(embedding.embedding, userInputEmbedding),\n      index\n    }));\n  return similarities\n    .sort((a, b) => b.value - a.value)\n    .slice(0, numberOfSimilarities)\n    .map(e => embeddings[e.index].source);\n};\n\nexport const systemPrompt =\n  'You are a helpful assistant that helps users write python code in Jupyter notebook cells. ' +\n  'You are helping the user write new code and edit old code in Jupyter notebooks. ' +\n  'You write code exactly as if an expert python user would write, reusing existing variables and functions as needed. ' +\n  'You respond with the clean, good quality, working python code only, NO BACKTICKS.';\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\n\nlet settingRegistry: ISettingRegistry;\n\nasync function handleConsent(consent: string) {\n  await settingRegistry.set(\n    '@jupyterlab/apputils-extension:notification',\n    'posthogCookieConsent',\n    consent\n  );\n  removeSplashScreen();\n}\n\nfunction createSplashScreen() {\n  const isMac = /Mac/i.test(navigator.userAgent);\n  const keyCombination = isMac ? 'Cmd + K' : 'Ctrl + K';\n\n  const splashScreen = document.createElement('div');\n  splashScreen.id = 'splash-screen';\n  splashScreen.innerHTML = `\n    <style>\n      #splash-screen {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 1000;\n      }\n\n      .splash-content {\n        background: white;\n        padding: 30px;\n        border-radius: 15px;\n        text-align: left;\n        max-width: 500px;\n        width: 90%;\n        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n      }\n\n      .splash-content h1 {\n        margin-top: 0;\n      }\n\n      .splash-buttons {\n        display: flex;\n        justify-content: flex-end;\n        margin-top: 20px;\n      }\n\n      .splash-buttons button {\n        margin-left: 10px;\n        padding: 10px 20px;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        font-size: 16px;\n      }\n\n      #splash-accept {\n        background-color: #4CAF50;\n        color: white;\n      }\n\n      #splash-reject {\n        background-color: transparent;\n        color: black;\n      }\n\n      .splash-content a {\n        color: #1a0dab;\n        text-decoration: underline;\n      }\n    </style>\n    <div class=\"splash-content\">\n      <h1>Welcome to Pretzel</h1>\n      <p>How to use:</p>\n      <ul>\n        <li>When in a cell, press <strong>${keyCombination}</strong> and type in your prompt</li>\n        <li>You can use <strong>@variable</strong> syntax in the prompt to refer to dataframes and variables in memory</li>\n        <li>Press the <strong>\"Fix Error with AI\"</strong> button to automatically fix errors</li>\n        <li>Go to <strong>Settings > Settings Editor</strong> and search for Pretzel AI to customize which AI model is used</li>\n        <li>See more usage instructions <a href=\"https://github.com/pretzelai/pretzelai#readme\" target=\"_blank\">in our README</a></li>\n      </ul>\n      <p>To better understand how users are using the new AI codegen features, we collect anonymized telemetry strictly related to the AI features. We also collect the AI prompt but it can be disabled in Pretzel AI Settings.</p>\n      <p>We use cookies to make sure we remember you between browser sessions. Do you consent to the use of cookies for this purpose?</p>\n      <div class=\"splash-buttons\">\n        <button id=\"splash-accept\">Accept</button>\n        <button id=\"splash-reject\">Reject</button>\n      </div>\n    </div>\n  `;\n  document.body.appendChild(splashScreen);\n\n  document\n    .getElementById('splash-accept')\n    ?.addEventListener('click', () => handleConsent('Yes'));\n  document\n    .getElementById('splash-reject')\n    ?.addEventListener('click', () => handleConsent('No'));\n}\n\nfunction removeSplashScreen() {\n  const splashScreen = document.getElementById('splash-screen');\n  if (splashScreen) {\n    splashScreen.remove();\n  }\n}\n\nexport function initSplashScreen(registry: ISettingRegistry) {\n  settingRegistry = registry;\n  createSplashScreen();\n}\n","/*\n * Copyright (c) Pretzel AI GmbH.\n * This file is part of the Pretzel project and is licensed under the\n * GNU Affero General Public License version 3.\n * See the LICENSE_AGPLv3 file at the root of the project for the full license text.\n * Contributions by contributors listed in the PRETZEL_CONTRIBUTORS file (found at\n * the root of the project) are licensed under AGPLv3.\n */\nexport async function calculateHash(input: string) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(input);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n\nexport const cosineSimilarity = (vecA: number[], vecB: number[]): number => {\n  const dotProduct = vecA.reduce(\n    (acc: number, current: number, index: number) =>\n      acc + current * vecB[index],\n    0\n  );\n  const magnitudeA = Math.sqrt(\n    vecA.reduce((acc: number, val: number) => acc + val * val, 0)\n  );\n  const magnitudeB = Math.sqrt(\n    vecB.reduce((acc: number, val: number) => acc + val * val, 0)\n  );\n  return dotProduct / (magnitudeA * magnitudeB);\n};\n\nexport const isSetsEqual = (xs: Set<any>, ys: Set<any>) =>\n  xs.size === ys.size && [...xs].every(x => ys.has(x));\n\nexport const renderEditor = (\n  gen: string,\n  parentContainer: HTMLElement,\n  diffEditorContainer: HTMLElement,\n  diffEditor: any,\n  monaco: any,\n  oldCode: string\n) => {\n  try {\n    if (!diffEditor) {\n      const diffContainer = document.createElement('div');\n      diffContainer.className = 'diff-container';\n      diffContainer.style.marginTop = '10px';\n      diffContainer.style.display = 'flex';\n      diffContainer.style.flexDirection = 'column';\n      parentContainer.appendChild(diffContainer);\n\n      diffContainer.appendChild(diffEditorContainer);\n\n      // finally, the diff editor itself\n      const currentTheme =\n        document.body.getAttribute('data-jp-theme-light') === 'true'\n          ? 'vs'\n          : 'vs-dark';\n      diffEditor = monaco.editor.createDiffEditor(diffEditorContainer, {\n        readOnly: true,\n        theme: currentTheme,\n        renderSideBySide: false,\n        minimap: { enabled: false },\n        overviewRulerBorder: false,\n        overviewRulerLanes: 0,\n        scrollbar: {\n          vertical: 'hidden',\n          horizontal: 'hidden',\n          handleMouseWheel: false\n        }\n      });\n      diffEditor.setModel({\n        original: monaco.editor.createModel(oldCode, 'python'),\n        modified: monaco.editor.createModel('', 'python')\n      });\n    }\n    const modifiedModel = diffEditor!.getModel()!.modified;\n    const endLineNumber = modifiedModel.getLineCount();\n    const endColumn = modifiedModel.getLineMaxColumn(endLineNumber);\n    modifiedModel.applyEdits([\n      {\n        range: new monaco.Range(\n          endLineNumber,\n          endColumn,\n          endLineNumber,\n          endColumn\n        ),\n        text: gen,\n        forceMoveMarkers: true\n      }\n    ]);\n    const newCode = modifiedModel.getValue();\n    const heightPx =\n      oldCode.split('\\n').length + newCode.split('\\n').length * 19;\n    diffEditorContainer.style.height = heightPx + 'px';\n    diffEditor?.layout();\n    return diffEditor;\n  } catch (error) {\n    console.log('Error rendering editor:', error);\n  }\n};\n"],"names":[],"sourceRoot":""}